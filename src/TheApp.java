
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

public class TheApp extends javax.swing.JFrame {
    public TheApp() {
        initComponents();
        setLocationRelativeTo(null); // agar panel berada di tengah saat dibuka
        
        // agar textField tidak bisa diedit
        totalTF.setEditable(false);
        changeTF.setEditable(false);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")

    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel4 = new javax.swing.JPanel();
        jPanel1 = new javax.swing.JPanel();
        HeaderLabel = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        productLabel = new javax.swing.JLabel();
        priceLabel = new javax.swing.JLabel();
        quantityLabel = new javax.swing.JLabel();
        productTF = new javax.swing.JTextField();
        priceTF = new javax.swing.JTextField();
        stockTF = new javax.swing.JTextField();
        addButton = new javax.swing.JButton();
        editButton = new javax.swing.JButton();
        deleteButton = new javax.swing.JButton();
        clearButton = new javax.swing.JButton();
        jPanel3 = new javax.swing.JPanel();
        totalLabel = new javax.swing.JLabel();
        cashLabel = new javax.swing.JLabel();
        changeLabel = new javax.swing.JLabel();
        totalTF = new javax.swing.JTextField();
        cashTF = new javax.swing.JTextField();
        changeTF = new javax.swing.JTextField();
        calculateButton = new javax.swing.JButton();
        saveButton = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        productTable = new javax.swing.JTable();
        jPanel5 = new javax.swing.JPanel();
        productInfoLabel = new javax.swing.JLabel();

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 100, Short.MAX_VALUE)
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 100, Short.MAX_VALUE)
        );

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBackground(new java.awt.Color(102, 102, 102));

        HeaderLabel.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        HeaderLabel.setForeground(new java.awt.Color(255, 255, 255));
        HeaderLabel.setText("Hanana's App");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(30, 30, 30)
                .addComponent(HeaderLabel)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(25, 25, 25)
                .addComponent(HeaderLabel)
                .addContainerGap(25, Short.MAX_VALUE))
        );

        jPanel2.setBackground(new java.awt.Color(102, 102, 102));

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 30, Short.MAX_VALUE)
        );

        productLabel.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        productLabel.setForeground(new java.awt.Color(51, 51, 51));
        productLabel.setText("Product");

        priceLabel.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        priceLabel.setForeground(new java.awt.Color(51, 51, 51));
        priceLabel.setText("Price");

        quantityLabel.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        quantityLabel.setForeground(new java.awt.Color(51, 51, 51));
        quantityLabel.setText("Quantity");

        productTF.setBackground(new java.awt.Color(102, 102, 102));
        productTF.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        productTF.setForeground(new java.awt.Color(255, 255, 255));

        priceTF.setBackground(new java.awt.Color(102, 102, 102));
        priceTF.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        priceTF.setForeground(new java.awt.Color(255, 255, 255));

        stockTF.setBackground(new java.awt.Color(102, 102, 102));
        stockTF.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        stockTF.setForeground(new java.awt.Color(255, 255, 255));

        addButton.setBackground(new java.awt.Color(153, 153, 153));
        addButton.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        addButton.setForeground(new java.awt.Color(255, 255, 255));
        addButton.setText("ADD");
        addButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addButtonActionPerformed(evt);
            }
        });

        editButton.setBackground(new java.awt.Color(153, 153, 153));
        editButton.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        editButton.setForeground(new java.awt.Color(255, 255, 255));
        editButton.setText("EDIT");
        editButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                editButtonActionPerformed(evt);
            }
        });

        deleteButton.setBackground(new java.awt.Color(153, 153, 153));
        deleteButton.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        deleteButton.setForeground(new java.awt.Color(255, 255, 255));
        deleteButton.setText("DELETE");
        deleteButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deleteButtonActionPerformed(evt);
            }
        });

        clearButton.setBackground(new java.awt.Color(153, 153, 153));
        clearButton.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        clearButton.setForeground(new java.awt.Color(255, 255, 255));
        clearButton.setText("CLEAR");
        clearButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                clearButtonActionPerformed(evt);
            }
        });

        jPanel3.setBackground(new java.awt.Color(102, 102, 102));

        totalLabel.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        totalLabel.setForeground(new java.awt.Color(255, 255, 255));
        totalLabel.setText("Total");

        cashLabel.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        cashLabel.setForeground(new java.awt.Color(255, 255, 255));
        cashLabel.setText("Cash");

        changeLabel.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        changeLabel.setForeground(new java.awt.Color(255, 255, 255));
        changeLabel.setText("Change");

        totalTF.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        totalTF.setForeground(new java.awt.Color(51, 51, 51));
        totalTF.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                totalTFActionPerformed(evt);
            }
        });

        cashTF.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        cashTF.setForeground(new java.awt.Color(51, 51, 51));

        changeTF.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        changeTF.setForeground(new java.awt.Color(51, 51, 51));
        changeTF.setText("Rp. ");

        calculateButton.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        calculateButton.setForeground(new java.awt.Color(51, 51, 51));
        calculateButton.setText("Calculate");
        calculateButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                calculateButtonActionPerformed(evt);
            }
        });

        saveButton.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        saveButton.setForeground(new java.awt.Color(51, 51, 51));
        saveButton.setText("Save");
        saveButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                saveButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(calculateButton)
                        .addGap(18, 18, 18)
                        .addComponent(saveButton))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(changeLabel)
                            .addComponent(totalLabel, javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(cashLabel, javax.swing.GroupLayout.Alignment.LEADING))
                        .addGap(20, 20, 20)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(cashTF, javax.swing.GroupLayout.DEFAULT_SIZE, 229, Short.MAX_VALUE)
                            .addComponent(changeTF)
                            .addComponent(totalTF))))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(totalLabel)
                    .addComponent(totalTF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(20, 20, 20)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cashLabel)
                    .addComponent(cashTF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(20, 20, 20)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(changeLabel)
                    .addComponent(changeTF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(25, 25, 25)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(calculateButton)
                    .addComponent(saveButton))
                .addContainerGap(20, Short.MAX_VALUE))
        );

        productTable.setAutoCreateRowSorter(true);
        productTable.setBackground(new java.awt.Color(102, 102, 102));
        productTable.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        productTable.setForeground(new java.awt.Color(255, 255, 255));
        productTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Product", "Price (Rupiah)", "Quantity"
            }
        ));
        productTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                productTableMouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(productTable);
        if (productTable.getColumnModel().getColumnCount() > 0) {
            productTable.getColumnModel().getColumn(0).setResizable(false);
            productTable.getColumnModel().getColumn(0).setPreferredWidth(100);
            productTable.getColumnModel().getColumn(1).setMinWidth(50);
            productTable.getColumnModel().getColumn(1).setPreferredWidth(80);
            productTable.getColumnModel().getColumn(2).setMinWidth(50);
            productTable.getColumnModel().getColumn(2).setPreferredWidth(50);
        }

        jPanel5.setBackground(new java.awt.Color(153, 153, 153));

        productInfoLabel.setBackground(new java.awt.Color(255, 255, 255));
        productInfoLabel.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        productInfoLabel.setForeground(new java.awt.Color(255, 255, 255));
        productInfoLabel.setText("Products Information");

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addGap(138, 138, 138)
                .addComponent(productInfoLabel)
                .addContainerGap(114, Short.MAX_VALUE))
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(productInfoLabel)
                .addContainerGap(9, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(layout.createSequentialGroup()
                .addGap(30, 30, 30)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(addButton)
                        .addGap(18, 18, 18)
                        .addComponent(editButton)
                        .addGap(18, 18, 18)
                        .addComponent(deleteButton)
                        .addGap(18, 18, 18)
                        .addComponent(clearButton))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(productLabel)
                            .addComponent(priceLabel)
                            .addComponent(quantityLabel))
                        .addGap(30, 30, 30)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(productTF)
                            .addComponent(priceTF)
                            .addComponent(stockTF)))
                    .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(30, 30, 30)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
                .addGap(30, 30, 30))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(25, 25, 25)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(productLabel)
                        .addComponent(productTF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(priceLabel)
                            .addComponent(priceTF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(20, 20, 20)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(quantityLabel)
                            .addComponent(stockTF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(25, 25, 25)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(addButton)
                            .addComponent(editButton)
                            .addComponent(deleteButton)
                            .addComponent(clearButton))
                        .addGap(30, 30, 30)
                        .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
                .addGap(25, 25, 25)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    
    // method untuk mengosongkan textField
    private void clearFunc() {        
        productTF.setText("");
        priceTF.setText("");
        stockTF.setText("");
    }
    
    private void editButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_editButtonActionPerformed
        DefaultTableModel tableModel = (DefaultTableModel) productTable.getModel(); // membuat objek table model
        
        if (productTable.getSelectedRowCount() == 1) {
            // perkonsisian yang akan berjalan jika salah satu row diklik
            if (editButton.getText() == "EDIT") {
                addButton.setEnabled(false); // mematikan tombol
                deleteButton.setEnabled(false);
                editButton.setText("UPDATE"); // mengganti tombol edit menjadi tombol update
                
              // pengkondisian untuk tombol update
              // mengambil data table > mengubah data > membuat getter untuk mendapatkan data yang sudah diubah
              // dan setter untuk memasukkan data tersebut ke dalam table
            } else if (editButton.getText() == "UPDATE") {
                if (productTF.getText().equals("")||priceTF.getText().equals("")||stockTF.getText().equals("")) {
                    JOptionPane.showMessageDialog(this, "Please Enter All Data");
                // menambahkan data produk saat inputan sudah diisi semua
                }else {
                    //UNTUK TEXTFIELD #1/2
                    // mengurangi nilai total dengan nilai inputan yang belum di update
                    double totalAmount = Double.parseDouble(totalTF.getText());

                    String strPrice = tableModel.getValueAt(productTable.getSelectedRow(), 1).toString();
                    double intPrice = Double.parseDouble(strPrice);
                    String strQuant = tableModel.getValueAt(productTable.getSelectedRow(), 2).toString();
                    int intQuant = Integer.parseInt(strQuant);

                    double total = intPrice * intQuant;
                    totalAmount -= total;
                    totalTF.setText(Double.toString(totalAmount));

                    // membuat object baru untuk mengambil/get teks yang ada di textField

                    String product = productTF.getText();
                    String price = priceTF.getText();
                    String stock = stockTF.getText();

                    // memasukkan teks dari getter sebelumnya ke dalam table sesuai dengan urutan kolomnya
                    tableModel.setValueAt(product, productTable.getSelectedRow(), 0);
                    tableModel.setValueAt(price, productTable.getSelectedRow(), 1);
                    tableModel.setValueAt(stock, productTable.getSelectedRow(), 2);

                    
                    // UNTUK TEXTFIELD #2/2
                    // menambahkan nilai total dengan nilai inputan yang sudah di update

                    double newTotalAmount = Double.parseDouble(totalTF.getText());

                    String strPriceUpd = tableModel.getValueAt(productTable.getSelectedRow(), 1).toString();                    
                    String strQuantUpd = tableModel.getValueAt(productTable.getSelectedRow(), 2).toString();
                    
                    // try and catch, preventing from programme error
                    try {
                        double intPriceUpd = Double.parseDouble(strPriceUpd);
                        int intQuantUpd = Integer.parseInt(strQuantUpd);
                        
                        double newestTotal = intPriceUpd * intQuantUpd;
                        
                        newTotalAmount += newestTotal;
                        totalTF.setText(Double.toString(newTotalAmount));
                    } catch (NumberFormatException e) {
                        JOptionPane.showMessageDialog(this, "Invalid input for price or quantity. Please enter integer values only.", "Error", JOptionPane.ERROR_MESSAGE);
                        tableModel.removeRow(productTable.getSelectedRow()); // mengahapus row jika data yang diupdate bukan angka
                    }

                    // mengaktifkan kembali button
                    addButton.setEnabled(true); // mengaktifkan kembali tombol add dan delete
                    deleteButton.setEnabled(true);
                    editButton.setText("EDIT"); // mengembalikan tombol edit
                    JOptionPane.showMessageDialog(this, "Product is updated.");

                    clearFunc(); // mengosongkan textField dengan memanggil method clearFunc()
                }  
            }
        } else {
                JOptionPane.showMessageDialog(this, "Please select a single row to edit.");
            }
    }//GEN-LAST:event_editButtonActionPerformed

    private void totalTFActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_totalTFActionPerformed
        
    }//GEN-LAST:event_totalTFActionPerformed

    private void saveButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_saveButtonActionPerformed
        JOptionPane.showMessageDialog(this, "Thanks for shopping in our store, Comeback again next time!");
        
        // mengosongkan textField dan JTable
        clearFunc();
        DefaultTableModel tableModel = (DefaultTableModel)productTable.getModel();
        tableModel.setRowCount(0);
        totalTF.setText("");
        cashTF.setText("");
        changeTF.setText("Rp. ");
    }//GEN-LAST:event_saveButtonActionPerformed

    private void addButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addButtonActionPerformed
    // jika inputan textField tidak lengkap, akan menampilkan pesan melalui JOptionPane
       if (productTF.getText().equals("") || priceTF.getText().equals("") || stockTF.getText().equals("")) {
           JOptionPane.showMessageDialog(this, "Please Enter All Data");

       // menambahkan data produk saat inputan sudah diisi semua
       } else {
           // membuat array data[] untuk menyimpan data produk
           String data[] = { productTF.getText(), priceTF.getText(), stockTF.getText() };

           DefaultTableModel tableModel = (DefaultTableModel) productTable.getModel(); // membuat objek table model
           tableModel.addRow(data); // memasukkan data kedalam table

           int rowCount = tableModel.getRowCount();
           double totalAmount = 0.0;

           // pengulangan untuk terus menambahkan nilai total pada totalTF dengan setiap data baru yang ditambahkan
           for (int i = 0; i < rowCount; i++) {

               // membuat objek
               String strPrice = tableModel.getValueAt(i, 1).toString(); // mengambil data dari kolom price
               String strQuant = tableModel.getValueAt(i, 2).toString(); // mengambil data dari kolom quantity

               try {
                   double dblPrice = Double.parseDouble(strPrice); // mengubahnya menjadi double
                   int intQuant = Integer.parseInt(strQuant); // mengubahnya menjadi integer

                   double total = dblPrice * intQuant; // mathematical operation to calculate total
                   totalAmount += total; // untuk terus menambahkan nilai total dengan nilai total baru yang diinput
               } catch (NumberFormatException e) {
                   // catch saat ada inputan selain integer di priceTF dan quantityTF
                   JOptionPane.showMessageDialog(this, "Invalid input for price or quantity. Please enter integer values only.", "Error", JOptionPane.ERROR_MESSAGE);
                   tableModel.removeRow(i); // mengahapus baris yang invalid
//                   continue; // skip agar tidak ditambahkan ke totalTF
               }
           }

           totalTF.setText(Double.toString(totalAmount)); // set totalTF value from totalAmount and turned it to string
           JOptionPane.showMessageDialog(this, "New Product is Added");
           clearFunc(); // mengosongkan textField dengan memanggil method clearFunc()
       }
    }//GEN-LAST:event_addButtonActionPerformed

    private void clearButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_clearButtonActionPerformed
        // mengosongkan textField dengan memanggil method clearFunc()
        clearFunc();
    }//GEN-LAST:event_clearButtonActionPerformed

    private void productTableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_productTableMouseClicked
        DefaultTableModel tableModel = (DefaultTableModel)productTable.getModel();
        
        // mengambil data produk dari table
        String tableName = tableModel.getValueAt(productTable.getSelectedRow(), 0).toString();
        String tablePrice = tableModel.getValueAt(productTable.getSelectedRow(), 1).toString();
        String tableStock = tableModel.getValueAt(productTable.getSelectedRow(), 2).toString();
        
        // menaruh data produk yang sudah diambil kedalam textField
        productTF.setText(tableName);
        priceTF.setText(tablePrice);
        stockTF.setText(tableStock);
    }//GEN-LAST:event_productTableMouseClicked

    private void deleteButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deleteButtonActionPerformed
        DefaultTableModel tableModel = (DefaultTableModel)productTable.getModel();
        
        // pengkondisian jika ada baris yang dipilih
        if (productTable.getSelectedRowCount() == 1) {
            
            // mengurangi nilai total dengan nilai dari baris yang akan dihapus
            double totalAmount = Double.parseDouble(totalTF.getText());
                
            String strPrice = tableModel.getValueAt(productTable.getSelectedRow(), 1).toString();
            double intPrice = Double.parseDouble(strPrice);
            String strQuant = tableModel.getValueAt(productTable.getSelectedRow(), 2).toString();
            int intQuant = Integer.parseInt(strQuant);

            double total = intPrice * intQuant;
            totalAmount -= total;
                
            totalTF.setText(Double.toString(totalAmount));
            // sampai sini
            
            tableModel.removeRow(productTable.getSelectedRow()); // menghapus selected row from the table
            JOptionPane.showMessageDialog(this, "Product is Deleted.");

            // kondisi jika tidak ada baris yang dipilih
        } else {
            if (productTable.getSelectedRowCount() == 0) {
            JOptionPane.showMessageDialog(this, "Product Information is Empty.");
            } else {
                JOptionPane.showMessageDialog(this, "Please select a single row for deletion.");
            }
        }
    }//GEN-LAST:event_deleteButtonActionPerformed

    private void calculateButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_calculateButtonActionPerformed
        
        try {
            // mengambil nilai dari textField dan mengubahnya menjadi double agar bisa dihitung
            double total = Double.parseDouble(totalTF.getText());
            double cash = Double.parseDouble(cashTF.getText());

            // jika total lebih banyak dari cash
            if (total > cash) {
                JOptionPane.showMessageDialog(this, "Cash is not enough..");
            } else { // sebaliknya
                double change = cash - total; // untuk menghitung kembalian
                changeTF.setText(Double.toString(change)); // memasukkan hasil ke changeTF dengan mengubahnya ke string terlebih dahulu
            }
        } catch (NumberFormatException e) {
            JOptionPane.showMessageDialog(this, "Invalid input cash. Please enter integer value only.", "Error", JOptionPane.ERROR_MESSAGE);
            cashTF.setText("");
        }

    }//GEN-LAST:event_calculateButtonActionPerformed

    // main method
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(TheApp.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(TheApp.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(TheApp.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(TheApp.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new TheApp().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel HeaderLabel;
    private javax.swing.JButton addButton;
    private javax.swing.JButton calculateButton;
    private javax.swing.JLabel cashLabel;
    private javax.swing.JTextField cashTF;
    private javax.swing.JLabel changeLabel;
    private javax.swing.JTextField changeTF;
    private javax.swing.JButton clearButton;
    private javax.swing.JButton deleteButton;
    private javax.swing.JButton editButton;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JLabel priceLabel;
    private javax.swing.JTextField priceTF;
    private javax.swing.JLabel productInfoLabel;
    private javax.swing.JLabel productLabel;
    private javax.swing.JTextField productTF;
    private javax.swing.JTable productTable;
    private javax.swing.JLabel quantityLabel;
    private javax.swing.JButton saveButton;
    private javax.swing.JTextField stockTF;
    private javax.swing.JLabel totalLabel;
    private javax.swing.JTextField totalTF;
    // End of variables declaration//GEN-END:variables
}
